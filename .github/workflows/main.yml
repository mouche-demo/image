name: 'Build, Scan, Publish Prometheus Docker image'

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: 'ghcr.io'
  IMAGE_NAME: 'image'
  
jobs:
        
  build-prometheus:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      
    name: Build Prometheus image
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.8.0

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3.3.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v6.13.0
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        provenance: false
        platforms: "linux/amd64"
        tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  scan-prometheus:
    runs-on: ubuntu-latest
    needs: [ build-prometheus ]
    name: Scan Prometheus image
    steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3.3.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.29.0
      with:
        scan-type: image
        image-ref: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
        output: trivy-report.json
        format: json
        exit-code: 0
        ignore-unfixed: true

    - name: Upload Vulnerability Scan Results
      uses: actions/upload-artifact@v4.6.0
      with:
        name: trivy-report
        path: trivy-report.json
        retention-days: 30
